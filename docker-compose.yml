networks:
  testing_net:
    ipam:
      config:
      - subnet: 172.28.0.0/16
      driver: default
services:
  webapp:
    build:
      context: .
      dockerfile: ./compose/webapp/Dockerfile-dev
    command: sh -c "python3 run_app.py && ./flaskapp.sh"
    networks:
      testing_net:
        ipv4_address: 172.28.2.1
    ports:
    - 5000:5000
  node0:
    build:
      context: .
      dockerfile: ./compose/webapp/Dockerfile-node
    ports:
    - 8000:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.0
  node1:
    image: pythonblockchainapp_node0
    ports:
    - 8001:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.1
  node2:
    image: pythonblockchainapp_node0
    ports:
    - 8002:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.2
  node3:
    image: pythonblockchainapp_node0
    ports:
    - 8003:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.3
  node4:
    image: pythonblockchainapp_node0
    ports:
    - 8004:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.4
  node5:
    image: pythonblockchainapp_node0
    ports:
    - 8005:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.5
  node6:
    image: pythonblockchainapp_node0
    ports:
    - 8006:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.6
  node7:
    image: pythonblockchainapp_node0
    ports:
    - 8007:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.7
  node8:
    image: pythonblockchainapp_node0
    ports:
    - 8008:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.8
  node9:
    image: pythonblockchainapp_node0
    ports:
    - 8009:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.9
  node10:
    image: pythonblockchainapp_node0
    ports:
    - 8010:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.10
  node11:
    image: pythonblockchainapp_node0
    ports:
    - 8011:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.11
  node12:
    image: pythonblockchainapp_node0
    ports:
    - 8012:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.12
  node13:
    image: pythonblockchainapp_node0
    ports:
    - 8013:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.13
  node14:
    image: pythonblockchainapp_node0
    ports:
    - 8014:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.14
  node15:
    image: pythonblockchainapp_node0
    ports:
    - 8015:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.15
  node16:
    image: pythonblockchainapp_node0
    ports:
    - 8016:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.16
  node17:
    image: pythonblockchainapp_node0
    ports:
    - 8017:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.17
  node18:
    image: pythonblockchainapp_node0
    ports:
    - 8018:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.18
  node19:
    image: pythonblockchainapp_node0
    ports:
    - 8019:5000
    command:
    - python
    - node_server.py
    networks:
      testing_net:
        ipv4_address: 172.28.1.19
version: '3.2'

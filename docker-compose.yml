version: '3.2'
services:
  mongodb:
    build: ./mongodb
    volumes:
    - ./mongodb/data:/data/db/output
    ports:
    - ${MONGO_PORT}:27017
    env_file:
    - .env
    networks:
      mynet:
        ipv4_address: 172.28.2.1
  node1:
    build: ./python_blockchainapp
    ports:
    - 8001:8001
    command:
    - python
    - node_server.py
    - -p
    - '8001'
    networks:
      mynet:
        ipv4_address: 172.28.1.1
  node2:
    image: pythonblockchainapp_node1
    ports:
    - 8002:8002
    command:
    - python
    - node_server.py
    - -p
    - '8002'
    networks:
      mynet:
        ipv4_address: 172.28.1.2
  node3:
    image: pythonblockchainapp_node1
    ports:
    - 8003:8003
    command:
    - python
    - node_server.py
    - -p
    - '8003'
    networks:
      mynet:
        ipv4_address: 172.28.1.3
  node4:
    image: pythonblockchainapp_node1
    ports:
    - 8004:8004
    command:
    - python
    - node_server.py
    - -p
    - '8004'
    networks:
      mynet:
        ipv4_address: 172.28.1.4
  node5:
    image: pythonblockchainapp_node1
    ports:
    - 8005:8005
    command:
    - python
    - node_server.py
    - -p
    - '8005'
    networks:
      mynet:
        ipv4_address: 172.28.1.5
  node6:
    image: pythonblockchainapp_node1
    ports:
    - 8006:8006
    command:
    - python
    - node_server.py
    - -p
    - '8006'
    networks:
      mynet:
        ipv4_address: 172.28.1.6
  node7:
    image: pythonblockchainapp_node1
    ports:
    - 8007:8007
    command:
    - python
    - node_server.py
    - -p
    - '8007'
    networks:
      mynet:
        ipv4_address: 172.28.1.7
  node8:
    image: pythonblockchainapp_node1
    ports:
    - 8008:8008
    command:
    - python
    - node_server.py
    - -p
    - '8008'
    networks:
      mynet:
        ipv4_address: 172.28.1.8
  node9:
    image: pythonblockchainapp_node1
    ports:
    - 8009:8009
    command:
    - python
    - node_server.py
    - -p
    - '8009'
    networks:
      mynet:
        ipv4_address: 172.28.1.9
  node10:
    image: pythonblockchainapp_node1
    ports:
    - 8010:8010
    command:
    - python
    - node_server.py
    - -p
    - '8010'
    networks:
      mynet:
        ipv4_address: 172.28.1.10
  node11:
    image: pythonblockchainapp_node1
    ports:
    - 8011:8011
    command:
    - python
    - node_server.py
    - -p
    - '8011'
    networks:
      mynet:
        ipv4_address: 172.28.1.11
  node12:
    image: pythonblockchainapp_node1
    ports:
    - 8012:8012
    command:
    - python
    - node_server.py
    - -p
    - '8012'
    networks:
      mynet:
        ipv4_address: 172.28.1.12
  node13:
    image: pythonblockchainapp_node1
    ports:
    - 8013:8013
    command:
    - python
    - node_server.py
    - -p
    - '8013'
    networks:
      mynet:
        ipv4_address: 172.28.1.13
  node14:
    image: pythonblockchainapp_node1
    ports:
    - 8014:8014
    command:
    - python
    - node_server.py
    - -p
    - '8014'
    networks:
      mynet:
        ipv4_address: 172.28.1.14
  node15:
    image: pythonblockchainapp_node1
    ports:
    - 8015:8015
    command:
    - python
    - node_server.py
    - -p
    - '8015'
    networks:
      mynet:
        ipv4_address: 172.28.1.15
  node16:
    image: pythonblockchainapp_node1
    ports:
    - 8016:8016
    command:
    - python
    - node_server.py
    - -p
    - '8016'
    networks:
      mynet:
        ipv4_address: 172.28.1.16
  node17:
    image: pythonblockchainapp_node1
    ports:
    - 8017:8017
    command:
    - python
    - node_server.py
    - -p
    - '8017'
    networks:
      mynet:
        ipv4_address: 172.28.1.17
  node18:
    image: pythonblockchainapp_node1
    ports:
    - 8018:8018
    command:
    - python
    - node_server.py
    - -p
    - '8018'
    networks:
      mynet:
        ipv4_address: 172.28.1.18
  node19:
    image: pythonblockchainapp_node1
    ports:
    - 8019:8019
    command:
    - python
    - node_server.py
    - -p
    - '8019'
    networks:
      mynet:
        ipv4_address: 172.28.1.19
  node20:
    image: pythonblockchainapp_node1
    ports:
    - 8020:8020
    command:
    - python
    - node_server.py
    - -p
    - '8020'
    networks:
      mynet:
        ipv4_address: 172.28.1.20
  node21:
    image: pythonblockchainapp_node1
    ports:
    - 8021:8021
    command:
    - python
    - node_server.py
    - -p
    - '8021'
    networks:
      mynet:
        ipv4_address: 172.28.1.21
  node22:
    image: pythonblockchainapp_node1
    ports:
    - 8022:8022
    command:
    - python
    - node_server.py
    - -p
    - '8022'
    networks:
      mynet:
        ipv4_address: 172.28.1.22
  node23:
    image: pythonblockchainapp_node1
    ports:
    - 8023:8023
    command:
    - python
    - node_server.py
    - -p
    - '8023'
    networks:
      mynet:
        ipv4_address: 172.28.1.23
  node24:
    image: pythonblockchainapp_node1
    ports:
    - 8024:8024
    command:
    - python
    - node_server.py
    - -p
    - '8024'
    networks:
      mynet:
        ipv4_address: 172.28.1.24
  node25:
    image: pythonblockchainapp_node1
    ports:
    - 8025:8025
    command:
    - python
    - node_server.py
    - -p
    - '8025'
    networks:
      mynet:
        ipv4_address: 172.28.1.25
  node26:
    image: pythonblockchainapp_node1
    ports:
    - 8026:8026
    command:
    - python
    - node_server.py
    - -p
    - '8026'
    networks:
      mynet:
        ipv4_address: 172.28.1.26
  node27:
    image: pythonblockchainapp_node1
    ports:
    - 8027:8027
    command:
    - python
    - node_server.py
    - -p
    - '8027'
    networks:
      mynet:
        ipv4_address: 172.28.1.27
  node28:
    image: pythonblockchainapp_node1
    ports:
    - 8028:8028
    command:
    - python
    - node_server.py
    - -p
    - '8028'
    networks:
      mynet:
        ipv4_address: 172.28.1.28
  node29:
    image: pythonblockchainapp_node1
    ports:
    - 8029:8029
    command:
    - python
    - node_server.py
    - -p
    - '8029'
    networks:
      mynet:
        ipv4_address: 172.28.1.29
  node30:
    image: pythonblockchainapp_node1
    ports:
    - 8030:8030
    command:
    - python
    - node_server.py
    - -p
    - '8030'
    networks:
      mynet:
        ipv4_address: 172.28.1.30
  node31:
    image: pythonblockchainapp_node1
    ports:
    - 8031:8031
    command:
    - python
    - node_server.py
    - -p
    - '8031'
    networks:
      mynet:
        ipv4_address: 172.28.1.31
  node32:
    image: pythonblockchainapp_node1
    ports:
    - 8032:8032
    command:
    - python
    - node_server.py
    - -p
    - '8032'
    networks:
      mynet:
        ipv4_address: 172.28.1.32
  node33:
    image: pythonblockchainapp_node1
    ports:
    - 8033:8033
    command:
    - python
    - node_server.py
    - -p
    - '8033'
    networks:
      mynet:
        ipv4_address: 172.28.1.33
  node34:
    image: pythonblockchainapp_node1
    ports:
    - 8034:8034
    command:
    - python
    - node_server.py
    - -p
    - '8034'
    networks:
      mynet:
        ipv4_address: 172.28.1.34
  node35:
    image: pythonblockchainapp_node1
    ports:
    - 8035:8035
    command:
    - python
    - node_server.py
    - -p
    - '8035'
    networks:
      mynet:
        ipv4_address: 172.28.1.35
  node36:
    image: pythonblockchainapp_node1
    ports:
    - 8036:8036
    command:
    - python
    - node_server.py
    - -p
    - '8036'
    networks:
      mynet:
        ipv4_address: 172.28.1.36
  node37:
    image: pythonblockchainapp_node1
    ports:
    - 8037:8037
    command:
    - python
    - node_server.py
    - -p
    - '8037'
    networks:
      mynet:
        ipv4_address: 172.28.1.37
  node38:
    image: pythonblockchainapp_node1
    ports:
    - 8038:8038
    command:
    - python
    - node_server.py
    - -p
    - '8038'
    networks:
      mynet:
        ipv4_address: 172.28.1.38
  node39:
    image: pythonblockchainapp_node1
    ports:
    - 8039:8039
    command:
    - python
    - node_server.py
    - -p
    - '8039'
    networks:
      mynet:
        ipv4_address: 172.28.1.39
  node40:
    image: pythonblockchainapp_node1
    ports:
    - 8040:8040
    command:
    - python
    - node_server.py
    - -p
    - '8040'
    networks:
      mynet:
        ipv4_address: 172.28.1.40
  node41:
    image: pythonblockchainapp_node1
    ports:
    - 8041:8041
    command:
    - python
    - node_server.py
    - -p
    - '8041'
    networks:
      mynet:
        ipv4_address: 172.28.1.41
  node42:
    image: pythonblockchainapp_node1
    ports:
    - 8042:8042
    command:
    - python
    - node_server.py
    - -p
    - '8042'
    networks:
      mynet:
        ipv4_address: 172.28.1.42
  node43:
    image: pythonblockchainapp_node1
    ports:
    - 8043:8043
    command:
    - python
    - node_server.py
    - -p
    - '8043'
    networks:
      mynet:
        ipv4_address: 172.28.1.43
  node44:
    image: pythonblockchainapp_node1
    ports:
    - 8044:8044
    command:
    - python
    - node_server.py
    - -p
    - '8044'
    networks:
      mynet:
        ipv4_address: 172.28.1.44
  node45:
    image: pythonblockchainapp_node1
    ports:
    - 8045:8045
    command:
    - python
    - node_server.py
    - -p
    - '8045'
    networks:
      mynet:
        ipv4_address: 172.28.1.45
  node46:
    image: pythonblockchainapp_node1
    ports:
    - 8046:8046
    command:
    - python
    - node_server.py
    - -p
    - '8046'
    networks:
      mynet:
        ipv4_address: 172.28.1.46
  node47:
    image: pythonblockchainapp_node1
    ports:
    - 8047:8047
    command:
    - python
    - node_server.py
    - -p
    - '8047'
    networks:
      mynet:
        ipv4_address: 172.28.1.47
  node48:
    image: pythonblockchainapp_node1
    ports:
    - 8048:8048
    command:
    - python
    - node_server.py
    - -p
    - '8048'
    networks:
      mynet:
        ipv4_address: 172.28.1.48
  node49:
    image: pythonblockchainapp_node1
    ports:
    - 8049:8049
    command:
    - python
    - node_server.py
    - -p
    - '8049'
    networks:
      mynet:
        ipv4_address: 172.28.1.49
  node50:
    image: pythonblockchainapp_node1
    ports:
    - 8050:8050
    command:
    - python
    - node_server.py
    - -p
    - '8050'
    networks:
      mynet:
        ipv4_address: 172.28.1.50
networks:
  mynet:
    ipam:
      driver: default
      config:
      - subnet: 172.28.1.0/16
